@model SkinShop.Models.ViewModels.DeliveryVM

@Styles.Render("~/Content/SkinShopCSS/CreateSkin.css")
<div class="caption gradient-text">Оформление доставки</div>
@if (ViewBag.Status == false)
{
    <div class="text-danger">
        @if (ViewBag.Result != null)
        {
            <p>
                @ViewBag.Result
            </p>
        }
    </div>
}
else
{
    <div class="text-success">
        @if (ViewBag.Result != null)
        {
            <p>
                @ViewBag.Result
            </p>
        }
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PayType, htmlAttributes: new { @class = "control-label" })
            <div>
                <select id="paytype" name="paytype" class="form-control">
                    <option> - </option>
                    <option>Наличные</option>
                    <option>Карта</option>
                </select>
                @Html.ValidationMessageFor(model => model.PayType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="deliverytypeblock" hidden class="form-group">
            @Html.LabelFor(model => model.DeliveryType, htmlAttributes: new { @class = "control-label" })
            <div>
                <select id="deliverytype" name="deliverytype" class="form-control">
                    <option> - </option>
                    <option>Курьерская</option>
                    <option>Наложенный платёж</option>
                </select>
                @Html.ValidationMessageFor(model => model.DeliveryType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="postblock" hidden>
            @Html.LabelFor(model => model.Post, htmlAttributes: new { @class = "control-label" })
            <div>
                <select id="post" name="post" class="form-control">
                    <option> - </option>
                    <option>Новая почта</option>
                    <option>Укрпочта</option>
                    <option>Justin</option>
                </select>
                @Html.ValidationMessageFor(model => model.Post, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="postdepartmentblock" hidden>
            @Html.LabelFor(model => model.PostDepartment, htmlAttributes: new { @class = "control-label" })
            <div>
                <select id="postdepartment" name="postdepartment" class="form-control">
                    <option> - </option>
                    <option>1</option>
                    <option>2</option>
                    <option>3</option>
                    <option>4</option>
                    <option>5</option>
                    <option>6</option>
                    <option>7</option>
                    <option>8</option>
                    <option>9</option>
                    <option>10</option>
                </select>
                @Html.ValidationMessageFor(model => model.PostDepartment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Wishes, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Wishes, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Wishes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $('#paytype').change(function(){
        let pay = $('#paytype').val();
        if (pay == "Карта") {
            $('#deliverytype').html("<option> - </option><option>Курьерская</option><option>Почта</option>");
            $('#deliverytypeblock').show();
            $('#postblock').hide();
            $('#postdepartmentblock').hide();
            $('#post').val(" - ");
            $('#postdepartment').val(" - ");
        }
        else if (pay == "Наличные") {
            $('#deliverytype').html("<option> - </option><option>Курьерская</option><option>Наложенный платёж</option>");
            $('#deliverytypeblock').show();
            $('#postblock').hide();
            $('#postdepartmentblock').hide();
            $('#post').val(" - ");
            $('#postdepartment').val(" - ");
            $('#deliverytype').val(" - ");
        }
        else {
            $('#deliverytypeblock').hide();
            $('#postblock').hide();
            $('#postdepartmentblock').hide();
            $('#post').val(" - ");
            $('#postdepartment').val(" - ");
            $('#deliverytype').val(" - ");
        }
    });

    $('#post').change(function () {
        let post = $('#post').val();
        if (post == "-") {
            $('#postdepartmentblock').hide();
            $('#postdepartment').val(" - ");
        }
        else {
            $('#postdepartmentblock').show();
        }
    });

    $('#deliverytype').change(function () {
        let type = $('#deliverytype').val();
        if (type == "Наложенный платёж" || type == "Почта") {
            $('#postblock').show();
        }
        else {
            $('#postblock').hide();
            $('#postdepartmentblock').hide();
            $('#post').val(" - ");
            $('#postdepartment').val(" - ");
        }
    });
</script>