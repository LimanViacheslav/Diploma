@model SkinShop.Models.ViewModels.CreateClothVM

@Styles.Render("~/Content/SkinShopCSS/CreateSkin.css")
<div class="caption gradient-text">Создать вещь</div>
@if (ViewBag.Status == false)
{
    <div class="text-danger">
        @if (ViewBag.Result != null)
        {
            <p>
                @ViewBag.Result
            </p>
        }
    </div>
}
else
{
    <div class="text-success">
        @if (ViewBag.Result != null)
        {
            <p>
                @ViewBag.Result
            </p>
        }
    </div>
}

<div class="addgameblock">
    <a class="btn btn-info addgame" href="@Url.Action("CreateColor", "Admin")">Добавить цвет</a>
</div>

@using (Html.BeginForm("CreateCloth", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ForMen, htmlAttributes: new { @class = "control-label" })
            <div>
                <div class="checkbox">
                    @if (Model?.ForMen != "")
                    {
                        if (Model?.ForMen == "Для мужчин")
                        {
                            <label for="men">Для мужчин: <input id="men" type="radio" name="ForMen" value="Для мужчин" checked /></label>
                            <label for="women">Для женщин: <input id="women" type="radio" name="ForMen" value="Для женщин" /></label>
                        }
                        else
                        {
                            <label for="men">Для мужчин: <input id="men" type="radio" name="ForMen" value="Для мужчин" /></label>
                            <label for="women">Для женщин: <input id="women" type="radio" name="ForMen" value="Для женщин" checked /></label>
                        }
                    }
                    else
                    {
                        <label for="men">Для мужчин: <input id="men" type="radio" name="ForMen" value="Для мужчин" /></label>
                        <label for="women">Для женщин: <input id="women" type="radio" name="ForMen" value="Для женщин" checked /></label>
                    }
                    @Html.ValidationMessageFor(model => model.ForMen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Composition, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Composition, new { @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Composition, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedColors, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.ListBox("SelectedColors", Model.Colors, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SelectedColors, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sizes, htmlAttributes: new { @class = "control-label" })
            <div>
                <select name="Sizes" class="form-control" multiple>
                    <option>XS</option>
                    <option>S</option>
                    <option>M</option>
                    <option>L</option>
                    <option>XL</option>
                    <option>XXL</option>
                    <option>XXXL</option>
                    <option>XXXXL</option>
                    <option>XXXXXL</option>
                </select>
                @Html.ValidationMessageFor(model => model.Sizes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sale, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Sale, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

         @if (Model != null && Model.ImagesInDatebase != null)
        {
            <div class="imgtext">Текущие изображения</div>
            foreach (var i in Model.ImagesInDatebase)
            {
                <div class="imgblock">
                    <img src="@String.Format("data:image/gif;base64,{0}", Convert.ToBase64String(i.Photo))" alt="@i.Text" class="img-responsive imgcustom">
                </div>
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label" })
            <div>
                <input name="Images" type="file" accept=".jpg" />
                @Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="btn btn-success add-btn" id="add">
            +
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Alt, htmlAttributes: new { @class = "control-label" })
            <div>
                @Html.EditorFor(model => model.Alt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Alt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Properties, htmlAttributes: new { @class = "control-label" })
            <div>
                <span>Название: <input type="text" name="PropertyNames" class="form-control" /></span>
                <span>Значение: <input type="text" name="PropertyValues" class="form-control" /></span>
            </div>
        </div>
        <div class="btn btn-success add-btn" id="add-prop">
            +
        </div>

        <div class="form-group">
            <div>
                <input type="submit" value="Сохранить" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $('#add').click(function () {
        $('#add').before('<div class="form-group"><div><input name="Images" type="file" accept=".jpg" />@Html.ValidationMessageFor(model => model.Images, "", new { @class = "text-danger" })</div><div class="btn btn-danger" onclick="Delete(this)">-</div></div>');
    });

    $('#add-prop').click(function () {
        $('#add-prop').before('<div class="form-group"><div><span>Название: <input type="text" name="PropertyNames" class="form-control" /></span><span>Значение: <input type="text" name="PropertyValues" class="form-control" /></span></div><div class="btn btn-danger" onclick="Delete(this)">-</div></div>');
    });

    function Delete(e) {
        let parent = e.parentElement;
        parent.parentElement.removeChild(parent);
    }
</script>